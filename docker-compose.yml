
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: urlshortener
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d urlshortener"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  app:
    build: ./backend
    ports:
      - "8080:8080"   # REST
      - "50051:50051" # gRPC
    environment:
      DATABASE_URL: "postgres://user:password@db:5432/urlshortener?sslmode=disable"
      REDIS_ADDR: "redis:6379"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    # Uncomment this for Go live reload! (see below)
    # volumes:
    #   - .:/app
    #   - /app/tmp

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    # volumes:
      # - ./frontend:/app         # Live mount for hot reload
      # - /app/node_modules       # Prevents override of node_modules
    working_dir: /app
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://app:8080
    command: npm run dev        # Use dev server for hot reload
    user: "1000:1000"
    depends_on:
      - app


  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
